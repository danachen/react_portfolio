{"ast":null,"code":"var _jsxFileName = \"/Users/Dana/Dropbox/Github/Learn_React/Examples/portfolio/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const projects = {\n    info: [{\n      id: 1,\n      img: 'terminal.jpg',\n      name: \"Simple Server\",\n      about: \"Server built with <i>bash</i> to deliver simple HTML content requested by browser.\",\n      tech: \"bash\",\n      deployment: \"\",\n      github: 'https://github.com/danachen/simple-server'\n    }, {\n      id: 2,\n      img: 'book-reader.jpg',\n      name: \"Book Reader\",\n      about: \"Book reader that parses copy-right works into user-friendly chapters and search functionality.\",\n      tech: \"Ruby, Sinatra, Javascript, HTML/CSS\",\n      deployment: \"https://book-reader-sherlock.herokuapp.com/\",\n      github: \"https://github.com/danachen/book-reader\"\n    }, {\n      id: 3,\n      img: 'file-based-cms.jpg',\n      name: \"File-Based CMS\",\n      about: \"File-based content management system with sessions and user management.\",\n      tech: \"Ruby, Sinatra, HTML/CSS\",\n      deployment: \"\",\n      github: 'https://github.com/danachen/file-based-cms'\n    }, {\n      id: 4,\n      img: 'todo-html.png',\n      name: \"Todo with HTML/CSS\",\n      about: \"A web and mobile friendly todo list front-end display designed in HTML/CSS.\",\n      tech: \"HTML/CSS\",\n      deployment: \"https://danachen.github.io/todo-html/\",\n      github: 'https://github.com/danachen/todo-html'\n    }, {\n      id: 5,\n      img: 'todo-js-oop.jpg',\n      name: \"Todo JS Backend\",\n      about: \"Todo list backend built with Javascript utilizing OOP Principles with full test suite.\",\n      tech: \"Javascript, HTML/CSS\",\n      deployment: \"\",\n      github: 'https://github.com/danachen/todo-js-oop'\n    }, {\n      id: 6,\n      img: 'whack-a-ruby.png',\n      name: \"Whack a Ruby\",\n      about: \"Implementation of the classic Whack a Mole game.\",\n      tech: \"Javascript, HTML/CSS\",\n      deployment: \"https://whack-a-ruby.herokuapp.com/\",\n      github: 'https://github.com/danachen/whack-a-ruby'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Projects, {\n      list: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst Projects = ({\n  list\n}) => {\n  return list.map(item => /*#__PURE__*/_jsxDEV(Item, {\n    itemName: item.name,\n    itemDescription: item.about,\n    itemTech: item.tech,\n    itemDeploymenet: item.deployment,\n    itemGithub: item.github\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 22\n  }, this));\n};\n\n_c2 = Projects;\n\nconst Item = ({\n  itemName,\n  itemDescription\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [itemName, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [itemDescription, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Item;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Projects\");\n$RefreshReg$(_c3, \"Item\");","map":{"version":3,"sources":["/Users/Dana/Dropbox/Github/Learn_React/Examples/portfolio/src/App.js"],"names":["React","App","projects","info","id","img","name","about","tech","deployment","github","Projects","list","map","item","Item","itemName","itemDescription"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst App = () => {\n  const projects = {\n    info: [\n      { id: 1,\n        img: 'terminal.jpg',\n        name: \"Simple Server\",\n        about: \"Server built with <i>bash</i> to deliver simple HTML content requested by browser.\",\n        tech: \"bash\",\n        deployment: \"\",\n        github: 'https://github.com/danachen/simple-server',\n      },\n    \n      { id: 2,\n        img: 'book-reader.jpg',\n        name: \"Book Reader\",\n        about: \"Book reader that parses copy-right works into user-friendly chapters and search functionality.\",\n        tech: \"Ruby, Sinatra, Javascript, HTML/CSS\",\n        deployment: \"https://book-reader-sherlock.herokuapp.com/\",\n        github: \"https://github.com/danachen/book-reader\",\n      },\n    \n      { id: 3,\n        img: 'file-based-cms.jpg',\n        name: \"File-Based CMS\",\n        about: \"File-based content management system with sessions and user management.\",\n        tech: \"Ruby, Sinatra, HTML/CSS\",\n        deployment: \"\",\n        github: 'https://github.com/danachen/file-based-cms',\n      },\n    \n      { id: 4,\n        img: 'todo-html.png',\n        name: \"Todo with HTML/CSS\",\n        about: \"A web and mobile friendly todo list front-end display designed in HTML/CSS.\",\n        tech: \"HTML/CSS\",\n        deployment: \"https://danachen.github.io/todo-html/\",\n        github: 'https://github.com/danachen/todo-html',\n      },\n  \n      { id: 5,\n        img: 'todo-js-oop.jpg',\n        name: \"Todo JS Backend\",\n        about: \"Todo list backend built with Javascript utilizing OOP Principles with full test suite.\",\n        tech: \"Javascript, HTML/CSS\",\n        deployment: \"\",\n        github: 'https://github.com/danachen/todo-js-oop',\n      },\n  \n      { id: 6,\n        img: 'whack-a-ruby.png',\n        name: \"Whack a Ruby\",\n        about: \"Implementation of the classic Whack a Mole game.\",\n        tech: \"Javascript, HTML/CSS\",\n        deployment: \"https://whack-a-ruby.herokuapp.com/\",\n        github: 'https://github.com/danachen/whack-a-ruby',\n      },\n    ]\n  }\n\n  return (\n    <div>\n      <Projects list={projects} /> \n    </div>\n  );\n}\n\nconst Projects = ({list}) => {\n  return (\n    list.map(item => <Item \n      key={item.id} \n      itemName={item.name} \n      itemDescription={item.about}\n      itemTech={item.tech}\n      itemDeploymenet={item.deployment}\n      itemGithub={item.github}\n      />)\n      \n  )\n}\n\nconst Item = ({itemName, itemDescription}) => {\n  return (\n    <div>\n      <span>{itemName} </span>\n      <span>{itemDescription} </span>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}